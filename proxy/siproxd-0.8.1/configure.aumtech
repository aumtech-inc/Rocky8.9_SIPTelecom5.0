#  `configure' configures this package to adapt to many kinds of systems.
#  
#  Usage: ./configure [OPTION]... [VAR=VALUE]...
#  
#  To assign environment variables (e.g., CC, CFLAGS...), specify them as
#  VAR=VALUE.  See below for descriptions of some of the useful variables.
#  
#  Defaults for the options are specified in brackets.
#  
#  Configuration:
#    -h, --help              display this help and exit
#        --help=short        display options specific to this package
#        --help=recursive    display the short help of all the included packages
#    -V, --version           display version information and exit
#    -q, --quiet, --silent   do not print `checking...' messages
#        --cache-file=FILE   cache test results in FILE [disabled]
#    -C, --config-cache      alias for `--cache-file=config.cache'
#    -n, --no-create         do not create output files
#        --srcdir=DIR        find the sources in DIR [configure dir or `..']
#  
#  Installation directories:
#    --prefix=PREFIX         install architecture-independent files in PREFIX
#  			  [/usr/local]
#    --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#  			  [PREFIX]
#  
#  By default, `make install' will install all the files in
#  `/usr/local/bin', `/usr/local/lib' etc.  You can specify
#  an installation prefix other than `/usr/local' using `--prefix',
#  for instance `--prefix=$HOME'.
#  
#  For better control, use the options below.
#  
#  Fine tuning of the installation directories:
#    --bindir=DIR           user executables [EPREFIX/bin]
#    --sbindir=DIR          system admin executables [EPREFIX/sbin]
#    --libexecdir=DIR       program executables [EPREFIX/libexec]
#    --datadir=DIR          read-only architecture-independent data [PREFIX/share]
#    --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
#    --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
#    --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
#    --libdir=DIR           object code libraries [EPREFIX/lib]
#    --includedir=DIR       C header files [PREFIX/include]
#    --oldincludedir=DIR    C header files for non-gcc [/usr/include]
#    --infodir=DIR          info documentation [PREFIX/info]
#    --mandir=DIR           man documentation [PREFIX/man]
#  
#  Program names:
#    --program-prefix=PREFIX            prepend PREFIX to installed program names
#    --program-suffix=SUFFIX            append SUFFIX to installed program names
#    --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
#  
#  System types:
#    --build=BUILD     configure for building on BUILD [guessed]
#    --host=HOST       cross-compile to build programs to run on HOST [BUILD]
#    --target=TARGET   configure for building compilers for TARGET [HOST]
#  
#  Optional Features:
#    --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#    --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#    --disable-dependency-tracking  speeds up one-time build
#    --enable-dependency-tracking   do not reject slow dependency extractors
#    --enable-shared[=PKGS]
#                            build shared libraries [default=yes]
#    --enable-static[=PKGS]
#                            build static libraries [default=yes]
#    --enable-fast-install[=PKGS]
#                            optimize for fast installation [default=yes]
#    --disable-libtool-lock  avoid locking (might break parallel builds)
#    --disable-doc               build pdf/html doc (default=enabled)
#    --enable-static-libosip2    link statically against libosip2
#    --enable-dmalloc            build with DMALLOC support
#  
#  Optional Packages:
#    --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#    --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#    --with-extra-includes=DIR   adds non standard include paths
#    --with-extra-libs=DIR       adds non standard library paths
#    --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
#    --with-pic              try to use only PIC/non-PIC objects [default=use
#                            both]
#    --with-tags[=TAGS]
#                            include additional configurations [automatic]
#    --with-libosip-prefix=DIR   use libosip2 from DIR/include and DIR/lib
#    --with-custom-fwmodule=LIBRARY.a   use custom firewall control module
#  
#  Some influential environment variables:
#    CC          C compiler command
#    CFLAGS      C compiler flags
#    LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#                nonstandard directory <lib dir>
#    CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
#                headers in a nonstandard directory <include dir>
#    CPP         C preprocessor
#    CXX         C++ compiler command
#    CXXFLAGS    C++ compiler flags
#    CXXCPP      C++ preprocessor
#    F77         Fortran 77 compiler command
#    FFLAGS      Fortran 77 compiler flags
#  
#  Use these variables to override the choices made by `configure' or to help
#  it to find libraries and programs with nonstandard names/locations.
#  
#./configure --with-libosip-prefix=/home/dev/isp2.2/SIPTelecom3.5/thirdParty/libosip2-4.1.0
./configure --with-libosip-prefix=/home/dev/isp2.2/SIPTelecom3.5/proxy/siproxd-0.8.1/libosip2-4.1.0

